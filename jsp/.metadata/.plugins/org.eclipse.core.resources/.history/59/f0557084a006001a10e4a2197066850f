package com.webjjang.bean;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.Servlet;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;

import com.webjjang.board.dao.BoardDAO;
import com.webjjang.board.service.BoardDeleteService;
import com.webjjang.board.service.BoardListService;
import com.webjjang.board.service.BoardUpdateService;
import com.webjjang.board.service.BoardViewService;
import com.webjjang.board.service.BoardWriteService;
import com.webjjang.main.Service;
import com.webjjang.member.dao.MemberDAO;
import com.webjjang.member.service.MemberJoinService;
import com.webjjang.member.service.MemberLoginService;
import com.webjjang.notice.dao.NoticeDAO;
import com.webjjang.notice.service.NoticeDeleteService;
import com.webjjang.notice.service.NoticeListService;
import com.webjjang.notice.service.NoticeUpdateService;
import com.webjjang.notice.service.NoticeViewService;
import com.webjjang.notice.service.NoticeWriteService;
import com.webjjang.qna.dao.QnaDAO;
import com.webjjang.qna.service.QnaDeleteService;
import com.webjjang.qna.service.QnaListService;
import com.webjjang.qna.service.QnaUpdateService;
import com.webjjang.qna.service.QnaViewService;
import com.webjjang.qna.service.QnaWriteService;
/**
 * Servlet implementation class Beans
 */
@WebServlet(urlPatterns = "/init",loadOnStartup = 1)

public class Beans extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
	
	// 각각의 객체를 저장할 map 객체 선언하고 생성해 놓는다. 

		private static Map<String, Service> service = new HashMap<>(); 
	 
		private static Map<String, Object> dao = new HashMap<>(); 
		
    /**
     * @see HttpServlet#HttpServlet()
     */
    public Beans() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see Servlet#init(ServletConfig)
	 * Java에서 사용하던 Controller를 URL을 이용한 JSP나 Servlet이 담당하므로 사라진다.
	 */
	public void init(ServletConfig config) throws ServletException {
		// TODO Auto-generated method stub
		// init 메서드 -> 초기화 메서드 
		// 클래스가 시작될때 딱한번만 실행된다. -> static 블록 호출 당한다.   
		System.out.println("Beans.init() = static()블록");
		System.out.println("객체 초기화 중.....");
		//***********공 지 사 항 **********
		//dao 생성저장
		dao.put("noticeDAO", new NoticeDAO());
		//service 생성 저장
		service.put("noticeListService", 
				new NoticeListService((NoticeDAO) dao.get("noticeDAO")));
		service.put("noticeViewService", 
				new NoticeViewService((NoticeDAO) dao.get("noticeDAO")));
		service.put("noticeWriteService", 
				new NoticeWriteService((NoticeDAO) dao.get("noticeDAO")));
		service.put("noticeUpdateService", 
				new NoticeUpdateService((NoticeDAO) dao.get("noticeDAO")));
		service.put("noticeDeleteService", 
				new NoticeDeleteService((NoticeDAO) dao.get("noticeDAO")));
	
		//***********게 시 판  **********
		//dao 생성저장
		dao.put("boardDAO", new BoardDAO());
		//service 생성 저장
		service.put("boardListService", 
				new BoardListService((BoardDAO) dao.get("boardDAO")));
		service.put("boardWriteService", 
				new BoardWriteService((BoardDAO) dao.get("boardDAO")));
		service.put("boardViewService", 
				new BoardViewService((BoardDAO) dao.get("boardDAO")));
		service.put("boardUpdateService", 
				new BoardUpdateService((BoardDAO) dao.get("boardDAO")));
		service.put("boardDeleteService", 
				new BoardDeleteService((BoardDAO) dao.get("boardDAO")));

		
		//***********질 문 답 변  **********
		//dao 생성저장
		dao.put("qnaDAO", new QnaDAO());
		//service 생성 저장
		service.put("qnaListService", 
				new QnaListService((QnaDAO) dao.get("qnaDAO")));
//		service.put("qnaWriteService", 
//				new QnaWriteService((QnaDAO) dao.get("qnaDAO")));
//		service.put("qnaViewService", 
//				new QnaViewService((QnaDAO) dao.get("qnaDAO")));
//		service.put("boardUpdateService", 
//				new QnaUpdateService((QnaDAO) dao.get("qnaDAO")));
//		service.put("boardDeleteService", 
//				new QnaDeleteService((QnaDAO) dao.get("qnaDAO")));
		
		
		//*********** 회원관리 **********
				//dao 생성저장
		dao.put("memberDAO", new MemberDAO());
		//service 생성 저장
		service.put("memberJoinService", 
				new MemberJoinService((MemberDAO) dao.get("memberDAO")));
		
		service.put("memberLoginService", 
				new MemberLoginService((MemberDAO) dao.get("memberDAO")));
		
		
		
		System.out.println("객체 초기화 완료 .....");
		
	}//end of init()
	
	//Controller 를 받아내는 메서드 작성
	public static Service getService(String name) {
		return service.get(name);
	}
}// end of Beans class

		
		
		
		
		
		