package com.webjjang.qna.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import com.webjjang.qna.dto.QnaDTO;

public class QnaDAO {
	// 객체에서 사용할 DB 정보 -> list(),view()... 다른 메서드에서 다 필요로 하기 때문에
		// 전역 변수로 선언한다.
		String url = "jdbc:oracle:thin:@402-oracle:1521:orcl";
		String id = "c##java00";
		String pw = "java00";
		
		// 오라클 드라이버
		String driver = "oracle.jdbc.driver.OracleDriver";
		
		// servico.BoardListService -> dao.BoardDAO
		//1. 게시판 리스트 데이터 가져오기
		// 데이터 가져오기가 실패하면 출력하러 갈 수가 없다. 그런 경우에는 예외처리를 반드시 해야 하므로 
		// 여기서는 예외처리하지 않고 throw 시키는 것으로 할 수 있다. 
	    public List<QnaDTO> list() throws Exception{
	    	
	    	System.out.println("BoardDAO.list()");
			// 가져온 결과가 저장되어 지는 변수 -> 리턴해야 하므로 리턴 타입과 같아야 한다. 
	    	List<QnaDTO> list = null;
	    	
	    	// 데이터 가져오는 처리문
	    	// 1.드라이버 확인
	    	Class.forName(driver);
	    	// 2.연결 객체
	    	Connection con = DriverManager.getConnection(url,id,pw);
	    	// 3.실행한 쿼리문작성
	    	String sql = " select no, title, content, id, "
	    			+ "to_char(writeDate,'yyyy-mm-dd') writeDate, hit "
	    			+ " from board order by no desc "
	    			+ "refNo,ordNo,levNo,parentNo ";
	    	System.out.println("BoardDAO.list().sql:" + sql);
	    	// 4.실행객체 가져오기 / 데이터 셋팅
	    	PreparedStatement pstmt = con.prepareStatement(sql);
	    	// 5.실행
	    	ResultSet rs = pstmt.executeQuery();
	    	// 6.표시 /저장
	    	if(rs != null) {
	    		// rs.next(): 다음 데이처로 넘어가면서 데이처가 있으면 true, 없으면 false를 리턴 한다. 
	    		while(rs.next()) {
	    			// 최종적으로 저장할 list가 null이면 생성해서 사용가능 하도록 해준다. 
	    			// ArrayList는 list의 일종으로 배열을 사용한다. (연속된주소)
	    			if(list == null)list = new ArrayList<QnaDTO>();
	    			// 게시판 하나의 데이터를 담는 객체 생성  - BoardDTO
	    			QnaDTO dto = new QnaDTO();
	    			// 데이처를 담는다. rs에서 꺼내서  dto에
	    			dto.setNo(rs.getInt("no"));
	    			dto.setTitle(rs.getString("title"));
	    			dto.setContent(rs.getString("content"));
	    			dto.setId(rs.getString("id"));
	    			dto.setWriteDate(rs.getString("writeDate"));
	    			dto.setHit(rs.getInt("hit"));
	    			dto.setRefNo(rs.getInt("refNo"));
	    			dto.setOrdNo(rs.getInt("ordNo"));
	    			dto.setLevNo(rs.getInt("levNo"));
	    			dto.setParentNo(rs.getInt("parentNo"));
	    			// 리스트 데이거가 여러개 이므로 데이터를 담은 dto를 list에 추가 시킨다. 
	    			list.add(dto);
	    		}// end of while(rs.next())
	    	}// end of if(rs == null)
	    	
	    	// 7.닫기
	    	con.close();
	    	pstmt.close();
	    	rs.close();
	    	
	    	System.out.println("QnaDAO.list().list:"+list);
	    	   	
	    	return list;
		}// end of list()
	    
	    
	    // servico.BoardViewService -> dao.BoardDAO
	    //2. 게시판 글보기 데이터 가져오기 - 한개 데이터 - 글번호에 따라서 결정 (전달 받는다.)
	    // 데이터 가져오기가 실패하면 출력하러 갈 수가 없다. 그런 경우에는 예외처리를 반드시 해야 하므로 
	    // 여기서는 예외처리하지 않고 throw 시키는 것으로 할 수 있다.
	    // BoardController : 실행내용 결정  - 데이터 수집 / 표시 
	    // BoardController -> Service -> DAO
	    public QnaDTO view(int no) throws Exception{
	    	
	    	System.out.println("QnaDAO.view().no:" + no);
	    	
	    	// 가져온 결과가 저장되어 지는 변수 -> 리턴해야 하므로 리턴 타입과 같아야 한다. 
	    	QnaDTO dto = null;
	    	
	    	// 데이터 가져오는 처리문
	    	// 1.드라이버 확인
	    	Class.forName(driver);
	    	// 2.연결 객체
	    	Connection con = DriverManager.getConnection(url,id,pw);
	    	// 3.실행한 쿼리문작성
	    	// 쿼리문 중에서 ?는 값을 대체 시키는 대체 문자에 해당이 된다. 
	    	String sql = " select no, title, content, writer, "
	    			+ "to_char(writeDate,'yyyy-mm-dd') writeDate, hit "
	    			+ " from Qna where no = ? ";
	    	System.out.println("QnaDAO.list().sql:" + sql);
	    	// 4.실행객체 가져오기 / 데이터 셋팅
	    	PreparedStatement pstmt = con.prepareStatement(sql);
	    	// pstmt.setInt(?의 위치,?를 대체 해야할 값)
	    	pstmt.setInt(1, no);
	    	// 5.실행
	    	ResultSet rs = pstmt.executeQuery();
	    	// 6.표시 /저장
	    	if(rs != null && rs.next()) {
	    		// rs.next(): 다음 데이처로 넘어가면서 데이처가 있으면 true, 없으면 false를 리턴 한다. 
	    			// 게시판 하나의 데이터를 담는 객체 생성  - BoardDTO
	    			dto = new QnaDTO();
	    			// 데이처를 담는다. rs에서 꺼내서  dto에
	    			dto.setNo(rs.getInt("no"));
	    			dto.setTitle(rs.getString("title"));
	    			dto.setContent(rs.getString("content"));
	    			dto.setId(rs.getString("id"));
	    			dto.setWriteDate(rs.getString("writeDate"));
	    			dto.setHit(rs.getInt("hit"));
	    			dto.setRefNo(rs.getInt("refNo"));
	    			dto.setOrdNo(rs.getInt("ordNo"));
	    			dto.setLevNo(rs.getInt("levNo"));
	    			dto.setParentNo(rs.getInt("parentNo"));
	    			
	    	}// end of if(rs != null&& rs.next())
	   	
	    	
	    	// 7.닫기
	    	con.close();
	    	pstmt.close();
	    	rs.close();
	    	
	    	System.out.println("BoardDAO.list().dto:"+dto);
	    	
	    	return dto;
	    } // end of list()
	    
	}

