package com.webjjang.board.controller;

import java.util.List;
import java.util.Scanner;

import com.webjjang.board.dto.BoardDTO;
import com.webjjang.board.service.BoardListService;
import com.webjjang.board.service.BoardViewService;
import com.webjjang.main.Controller;
import com.webjjang.main.Main;
import com.webjjang.view.BoardView;

public class BoardController implements Controller{
	//Main.scn.nextLine(); 이러한 형태로 외부에서 호출 가능.
	public static Scanner scn = new Scanner(System.in);
	//public 공공의 - main 패키지의 Main 클래스에서 사용한다.
	@Override
	public void execute() {
		// 메인을 무한 반복 처리 - 0을 입력하면 이전 메뉴로 돌아간다(main)

		while(true) {
			try {
				//게시판 메뉴 출력
				System.out.println("===================================");
				System.out.println("===일                반                게                시              판===");
				System.out.println("===================================");
				System.out.printf("%s.리스트  %s.보기  %s.쓰기%n", "1", "2", "3");
				System.out.printf("%s.수정  %s.삭제  %s.이전메뉴%n", "4", "5", "0");
				System.out.println("메뉴의 번호를 입력하세요");
				String menu = Main.scn.nextLine();
				//switch 문을 빠져 나간다.
				//break : switch, for, while 문을 빠져 나갈때 사용한다.
				//break가 없는 경우는 case에 맞는 값이라서 case 아래로 처리하기 위해 들어오면
				//case와 상관 없이 처리문을 처리하게 된다.
				switch (menu) {
				case "1": //case 값 : 값에는 문자, 문자열, 정수는 가능하나 변수, 실수는 불가능하다.
					System.out.println("게시판리스트처리");
					//객체 생성 : BoardController -> [BoardListService] -> BoardDAO
					BoardListService boardListService = new BoardListService();
					//데이터 가져오기 -> 메서드 호출
					List<BoardDTO> list = boardListService.service();
					
					//가져온 데이터를 출력(객체 생성 -> 메서드 호출)
					BoardView boardView = new BoardView();
					boardView.list(list);
					break;
				case "2":
					System.out.println("게시판글보기처리");
					//list를 먼저 실행하고 있는 글 번호를 선택한다.
					System.out.println("보여줄 글 번호를 입력하세요");
					int no = Integer.parseInt(scn.nextLine());
					//데이터 가져오기
					BoardViewService boardViewService = new BoardViewService();
					BoardDTO dto = boardViewService.service(no);
					//생성하고 호출
					BoardView boardView2 = new BoardView();
					boardView2.view(dto);
					break;
				case "3":
					System.out.println("게시판글쓰기처리");
					break;
				case "4":
					System.out.println("게시판글수정처리");
					break;
				case "5":
					System.out.println("게시판글삭제처리");
					break;
				case "0":
					System.out.println("이전메뉴로 돌아가기");
					return;
				default:
					System.out.println("잘못된 메뉴값입니다. \n다시 입력하세요."); //println에서 중간에 줄 바꿈은 \n으로 사용. %n은 printf에서 사용 
					break;
				}
			} catch (Exception e) {
				// TODO: handle exception
				// 개발자를 위한 코드
				e.printStackTrace();
				// 사용자를 위한 코드
				System.out.println("게시판을 처리하는 중 오류가 발생되었습니다.");
				System.out.println("잠시후에 다시 시도해주세요");
				System.out.println("계속 진행이 안되면 전산담당자(정태환)에게 연락해주세요.");
			}
		}
	}
}
